{"version":3,"sources":["./src/app/app.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/layouts/masterlayout/routing.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"\\r\\n  <!-- <app-nav-menu></app-nav-menu>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div> -->\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component,AfterViewInit,Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    let loader = this.renderer.selectRootElement('#loader');\r\n    this.renderer.setStyle(loader, 'display', 'none');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\n//import {MasterLayoutModule} from './layouts/masterlayout/masterlayout.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './layouts/masterlayout/routing';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n//import { AuthenticationGuard } from './auth/authentication.guard';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ToastrModule.forRoot(),\r\n    AppRoutingModule,\r\n    NoopAnimationsModule\r\n    // MasterLayoutModule,\r\n  ],\r\n  providers: [\r\n   // AuthenticationGuard,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthenticationGuard } from '../../auth/authentication.guard'\r\n//import { DashboardComponent } from 'src/app/appl/dashboard/dashboard.component';\r\n//import { LoginComponent } from 'src/app/commonpages/login/login.component';\r\n//import { LoginlayoutComponent } from '../loginlayout/loginlayout.component';\r\n\r\n// import { WindowlayoutComponent } from '../windowlayout/windowlayout.component';\r\n// import { ViewpdfComponent } from 'src/app/application-module/shared/viewpdf/viewpdf.component';\r\n// import { CampusregistrationComponent } from 'src/app/commonpages/campusregistration/campusregistration.component';\r\n// import { OffCampusRegistrationComponent } from 'src/app/commonpages/off-campus-registration/off-campus-registration.component';\r\n// import { TestAcknowledgementComponent } from 'src/app/application-module/campus/test-acknowledgement/test-acknowledgement.component';\r\n// import { InterviewAcknowlwdgementComponent } from 'src/app/application-module/campus/interview-acknowlwdgement/interview-acknowlwdgement.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: \"auth\", pathMatch: 'full' },\r\n  { path: 'auth', loadChildren: () => import('../../authentication/authentication.module').then(m => m.AuthenticationModule) },\r\n  { path: 'app', loadChildren: () => import('../../application/application.module').then(m => m.ApplicationModule) },\r\n  { path: 'campusoffcampus', loadChildren: () => import('../../campus-offcampus-registration/campus-offcampus-registration.module').then(m => m.CampusOffcampusRegistrationModule) },\r\n  // {\r\n  //   path: '',\r\n  //   component: WindowlayoutComponent,\r\n  //   children: [\r\n  //     {\r\n  //       path: 'viewpdf',\r\n  //       component: ViewpdfComponent\r\n  //     },\r\n  //     {\r\n  //       path: 'campus-registration',\r\n  //       component: CampusregistrationComponent\r\n  //     },\r\n  //     {\r\n  //       path: 'off-campus-registration',\r\n  //       component: OffCampusRegistrationComponent\r\n  //     },\r\n  //     {\r\n  //       path: 'testacknowledgement',\r\n  //       component: TestAcknowledgementComponent\r\n  //     },\r\n  //     {\r\n  //       path: 'interviewacknowledgement',\r\n  //       component: InterviewAcknowlwdgementComponent\r\n  //     }\r\n  //   ]\r\n  //  }\r\n];\r\n//export const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\r\n  production: true,\r\n  //local\r\n  apiurl: 'https://localhost:5001/api',\r\n  apppath: 'https://localhost:5001',\r\n  apiKey: \"embee.co.in\",\r\n\r\n  //For UAT AppGateway\r\n  // apiurl: 'https://mrfconnectuat.mrfindia.net/api',\r\n  // apppath: 'https://mrfconnectuat.mrfindia.net:5001',\r\n  // apiKey: \"embee.co.in\",\r\n\r\n  //campus link for UAT\r\n  //campuslink: \"https://mrfconnectuat.mrfindia.net\",\r\n\r\n  // UAT Email Link\r\n  //emailLink: \"https://mrfconnectuat.mrfindia.net/\",\r\n\r\n  // UAT EDMS Link\r\n  //edmslink: \"https://mrfedms-app.azurewebsites.net/\"\r\n\r\n\r\n  //For Production AppGateway\r\n  // apiurl: 'https://mrfconnect.mrfindia.net/api',\r\n  // apppath: 'https://mrfconnect.mrfindia.net:5001',\r\n  // apiKey: \"embee.co.in\",\r\n\r\n  //campuslink for PROD\r\n  campuslink: \"https://mrfconnect.mrfindia.net\",\r\n\r\n  // PROD Email Link\r\n  emailLink: \"https://mrfconnect.mrfindia.net/\",\r\n\r\n  // PROD EDMS Link\r\n  edmslink: \"https://edmsapp.azurewebsites.net/\"\r\n\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}