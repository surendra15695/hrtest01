name: HrTest01

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'hrtest01'   # set this to your function app name on Azure
  AZURE_WEBAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '3.1'
  Node_Version: '16.13.0'
  WORKING_DIRECTORY: "/home/runner/work/hrtest01/hrtest01/Application.WebApp"
  AZURE_WEBAPP_PUBLISH_PATH: .\publish

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Check PWD and List
      run: |
        pwd
        ls -l

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{env.Node_Version}}

    - name: Install LibSSL
      run: |
        wget https://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb
        sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb

    - name: Install Angular
      run: npm install -g @angular/cli@8.3.29

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

    #- name: Build Application
     # run: dotnet build "${{ env.WORKING_DIRECTORY }}"

    - name: Publish
      run: |
        #dotnet publish --output ./output
        #dotnet nuget locals all --clear
        dotnet publish "${{ env.WORKING_DIRECTORY }}" --output "${{ env.AZURE_WEBAPP_PUBLISH_PATH }}"
        ls -l
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: hrtest-app
        path: ${{ env.AZURE_WEBAPP_PUBLISH_PATH }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: hrtest-app

    - name: Deploy to Webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
   
